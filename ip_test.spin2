{{
Propeller 2 Internet Protocol implementation - test
Copyright Â© 2022 Albert Emanuel Milani
See end of file for terms of use (MIT).
}}

CON '' Configuration

  _xtlfreq = 20_000_000
  _clkfreq = 200_000_000

  PHY_BASE = 8

OBJ

  phy : "EthPhy_RMII.spin2"
  ip  : "ip.spin2"
  fmt : "ip_fmt.spin2"

DAT '' Static config

mac             byte    0[6]
ipv4            byte    169,254,34,56


VAR

  long link_status_prev, link_status

CON '' Demo code
PUB main

  phy.start(PHY_BASE, @mac)
  debug("MAC: ", uhex_byte_array_(@mac, 6))
  ip.init()
  ip.set_mac(0, @mac)
  ip.set_ipv4(0, @ipv4)
  ip.set_on_udp(@on_udp)

  link_status~
  repeat
    link_status_prev, link_status := link_status, phy.EthLinkStatus
    if link_status <> link_status_prev
      ' Link status changed
      debug(uhex(link_status))
      if (link_status ^ link_status_prev) & %100
        if link_status & %100
          debug("link up")
        else
          ip.link_reset
          debug("link down")

    poll_rx_pkt

PRI poll_rx_pkt | ptr, len

  ' Poll for a packet
  ptr := phy.EthRecvPoll
  ifnot ptr
    return

  ' Handle packet
  \handle_pkt(ptr)

  ' Release RX buffer
  phy.EthRecvAck(ptr)

PRI handle_pkt(ptr) | len
  len := long[ptr]

  if len > 1500
    abort

  'debug("rx ", udec(len), uhex_byte_array(ptr+4, len))

  ifnot len := \ip.on_rx_eth(ptr+4, len)
    abort

  long[ptr] := len

  ' Submit packet
  phy.EthSend(ptr)

CON '' UDP server
PRI udp_echo() | c

  repeat while (c := recv()) => 0
    if 32 =< c and c < 127
      c ^= 2
    send(c)

PRI on_udp(udp_hdr, ptr, rx_len) : tx_len, dst | str, dport, sport

  send := fmt.pkt_send_setup(ptr, 1500)
  recv := fmt.pkt_recv_setup(ptr, rx_len)

  ' Get destination and source ports, which were already swapped
  dport := ip.bswap2(word[udp_hdr][0])
  sport := ip.bswap2(word[udp_hdr][1])

  if dport == 12345
    udp_echo
  elseif dport == 12347
    send("Got ", fmt.dec(rx_len), " bytes from port ", fmt.dec(sport), 10)
  else
    return ip.on_udp_builtin(udp_hdr, ptr, rx_len)

  tx_len := fmt.pkt_send_finish
  dst := -1

CON '' Copyright
{{

  Terms of Use: MIT License

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.

}}
